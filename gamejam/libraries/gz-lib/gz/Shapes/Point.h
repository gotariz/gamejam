#ifndef GZ_POINT_H
#define GZ_POINT_H

namespace gz
{

////////////////////////////////////////////////////////////
/// \brief A location in 2D space
////////////////////////////////////////////////////////////
template <class T>
class Point
{
    public:
        ////////////////////////////////////////////////////////////
        // Member data
        ////////////////////////////////////////////////////////////
        /// x location of the point
        T x;
        /// y location of the point
        T y;

        ////////////////////////////////////////////////////////////
        /// \brief defualt constructor - Data is initialised to zero.
        ////////////////////////////////////////////////////////////
        Point() :
        x(0),
        y(0)
        {}

        ////////////////////////////////////////////////////////////
        /// \brief auto initialising constructor
        ///
        ///\param x     x location of the point
        ///\param y     y location of the point
        ////////////////////////////////////////////////////////////
        Point(T px, T py) :
        x(px),
        y(py)
        {}

        ////////////////////////////////////////////////////////////
        /// \brief defualt destructor
        ////////////////////////////////////////////////////////////
        virtual ~Point(){}

        ////////////////////////////////////////////////////////////
        /// \brief set the x and y position
        ///
        ///\param x     x location of the point
        ///\param y     y location of the point
        ////////////////////////////////////////////////////////////
        void set(T xpos, T ypos)
        {
            x = xpos;
            y = ypos;
        }
};

}
#endif // GZ_POINT_H
